name: Release to PyPI

on:
  push:
    branches:
      - sudo

jobs:
  publish:
    runs-on: ubuntu-latest
    permissions:
      contents: write
      packages: write
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Install uv
      uses: astral-sh/setup-uv@v3
      with:
        version: "latest"
    
    - name: Set up Python
      run: uv python install 3.12

    - name: Upgrade version
    # read syne_Sql_extension/__init__.py __version__ = "1.0.0"
      run: |
        VERSION=$(grep "__version__ = " syne_sql_extension/__init__.py | cut -d'"' -f2)
        echo "VERSION=${VERSION}" >> $GITHUB_ENV

    - name: Increment version
      run: |
        uv venv --python 3.12
        source .venv/bin/activate
        uv pip install --upgrade semver
        echo "VERSION=${VERSION}" >> $GITHUB_ENV
        NEW_VERSION=$(python -c "import semver; print(semver.bump_patch('${VERSION}'))")
        echo "NEW_VERSION=${NEW_VERSION}" >> $GITHUB_ENV
    
    - name: Need to build package
      # only if cahnges are in .py files
      run: |
        if git diff --name-only --diff-filter=d | grep -qE '\.py$'; then
          echo "BUILD=true" >> $GITHUB_ENV
        else
          echo "No Python files changed, skipping build"
          echo "BUILD=false" >> $GITHUB_ENV
        fi

    - name: Update version in __init__.py
      run: |
        sed -i "s/__version__ = \"${VERSION}\"/__version__ = \"${NEW_VERSION}\"/" syne_sql_extension/__init__.py

    - name: Commit changes
      run: git config user.name "SyneHQ" && git config user.email "engineering@synehq.com" && git add . && git commit -m "Bump version to ${NEW_VERSION}"

    - name: Push changes
      run: git push

    - name: Build package
      run: |
        if [ "$BUILD" = "true" ]; then
          uv build
        fi

    - name: Publish to PyPI
      env:
        UV_PUBLISH_TOKEN: ${{ secrets.PYPI_API_TOKEN }}
      run: |
        if [ "$BUILD" = "true" ]; then
          uv publish
        fi
